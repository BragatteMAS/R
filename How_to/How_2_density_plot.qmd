---
title: "How_2_density_plot"
format: html
---


```{r}
## Carregar a biblioteca necessária
library(ggplot2)

## Criar um exemplo de dataframe
set.seed(123)
data <- data.frame(
  GC_percent = runif(1000, 0, 100),
  read_counts = rpois(1000, lambda = 100)
)

## Criar o gráfico de densidade
ggplot(data, aes(x = GC_percent, y = read_counts)) +
  geom_bin2d(bins = 50) +
  scale_fill_gradient(low = "white", high = "blue") +
  theme_minimal() +
  labs(
    x = "% GC of Target",
    y = "Target read counts"
  ) +
  geom_hline(yintercept = c(50, 150), linetype = "dotted", color = "red")
```


```{python}
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Gerar dados de exemplo mais agrupados
np.random.seed(123)
GC_percent = np.random.normal(loc=50, scale=10, size=1000)  # média em 50, desvio padrão 10
GC_percent = np.clip(GC_percent, 0, 100)  # Garantir que os valores estejam entre 0 e 100
read_counts = np.random.normal(loc=100, scale=25, size=1000)  # média em 100, desvio padrão 25
read_counts = np.clip(read_counts, 0, None)  # Garantir que os valores sejam não-negativos

data = pd.DataFrame({
    'GC_percent': GC_percent,
    'read_counts': read_counts
})

# Criar o gráfico de densidade
plt.figure(figsize=(10, 6))
sns.kdeplot(data=data, x='GC_percent', y='read_counts', fill=True, cmap='Blues', thresh=0.05)


# Adicionar linhas horizontais pontilhadas vermelhas
plt.axhline(y=50, color='red', linestyle='--')
plt.axhline(y=150, color='red', linestyle='--')

# Configurar rótulos e título
plt.xlabel('% GC of Target')
plt.ylabel('Target read counts')
plt.title('Density Plot of GC Percent vs Read Counts')

# Mostrar o gráfico
plt.show()
```