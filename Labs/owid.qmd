---
title: "owid"
format: html
editor: visual
---
## Owid data
```{r}
## chama bibliotecas
pacman::p_load(tidyverse, vroom, lubridate, plotly, polars, duckdb, RColorBrewer)
```

```{r}
## read this file
owid <- vroom("~/Documents/GitHub/R/Labs/dados/owid-covid-data.csv")
```

```{r}
# Verify column types/class
owid %>% 
  purrr::map(class) %>% 
  tibble::enframe(name = "column", value = "class")
```


```{r}
unique(owid$location)
```

```{r}
## selecionar a última data atualizada de World, aonde a coluna total_cases and total_deaths não estão vazias
owid_world <- owid |>  
  filter(location == "World", !is.na(total_cases), !is.na(total_deaths)) |>  
  select(location, date, total_cases, total_deaths) |> 
  arrange(desc(date)) |>  
  slice(1)
owid_world
```

```{r}
## segundo filtro dentro do dataset owid_world para a última data de 2022
owid_world_2022 <- owid |>
    filter(
        location == "World",
        !is.na(total_cases),
        !is.na(total_deaths),
        date <= "2022-03-13"
    ) |>
    arrange(desc(date)) |>
    slice(1)
```


```{r}
## selecionar a última data atualizada de World, aonde a coluna total_cases and total_deaths não estão vazias
owid_br <- owid |>  
  filter(location == "Brazil", !is.na(total_cases), !is.na(total_deaths)) |>  
  select(location, date, total_cases, total_deaths) |> 
  arrange(desc(date)) |>  
  slice(1)
owid_br
```

```{r}
glimpse(owid)
```
