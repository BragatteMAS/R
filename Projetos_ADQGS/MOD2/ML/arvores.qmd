---
title: "Arvores"
format: html
editor: visual
autor: Bragatte
---

## Arvores

```{r}
## Instalar e carregar a biblioteca
pacman::p_load(party)

## verificar dados
head(iris)

## aplicar modelo preditivo
table(predict(modelo), iris$Species)

## visualizar arvore de decisão
modelo <- ctree(Species~.,data=iris)
plot(modelo)

```

```{r}
## Instalar e carregar a biblioteca
pacman::p_load(rpart)

## Carregar os dados
data(iris)

## Criar a árvore de decisão
arvore <- rpart(Species ~ ., data = iris)

## Imprimir a árvore de decisão
printcp(arvore)

## Plotar a árvore de decisão
plot(arvore, uniform = TRUE, main = "Árvore de Decisão")
text(arvore, use.n = TRUE, all = TRUE, cex = .8)

```

```{r}
## Plotar a árvore de decisão usando rpart.plot
rpart.plot(arvore, type=4, extra=101)
```

Aqui, **`type=4`** é usado para criar uma árvore de decisão clássica, enquanto **`extra=101`** é usado para imprimir as taxas de erro de classe e o número de observações em cada nó. Para personalizar ainda mais o gráfico, você pode experimentar diferentes valores para o parâmetro **`extra`** ou outros parâmetros disponíveis em **`rpart.plot`**.

Este código criará uma visualização agradável e compreensível da árvore de decisão para o conjunto de dados Iris.

## **2. O Dado de Saúde**

Para este exemplo, vamos usar o conjunto de dados "PimaIndiansDiabetes" disponível na biblioteca "mlbench". Este conjunto de dados inclui informações de mulheres com pelo menos 21 anos de descendência Pima Indian. Inclui medidas como número de gravidezes, glicose, pressão arterial, entre outros.

```{r}
## Carregar o conjunto de dados PimaIndiansDiabetes
### Este conjunto de dados inclui informações sobre saúde de mulheres de ascendência Pima Indian
data(PimaIndiansDiabetes)

## Criar a árvore de decisão
### Estamos tentando prever a variável "diabetes" com base nas outras variáveis
arvore_saude <- rpart(diabetes ~ ., data = PimaIndiansDiabetes)

## Imprimir a árvore de decisão
### Esta função mostra o resultado da árvore de decisão como texto
printcp(arvore_saude)

## Plotar a árvore de decisão com rpart.plot
### Esta função cria uma visualização básica da árvore de decisão
rpart.plot(
  arvore_saude,
  yesno = 2,
  fallen.leaves = TRUE,
  type = 4,
  extra = 101
)
```

-   Aqui, **`type=4`** é usado para criar uma árvore de decisão clássica, enquanto **`extra=101`** é usado para imprimir as taxas de erro de classe e o número de observações em cada nó. Para personalizar ainda mais o gráfico, você pode experimentar diferentes valores para o parâmetro **`extra`** ou outros parâmetros disponíveis em **`rpart.plot`**.

    Este código criará uma visualização agradável e compreensível da árvore de decisão para o conjunto de dados Iris.

    Regenerate response

```{r}
## Plotar a árvore de decisão usando rpart.plot
rpart.plot(arvore_saude, type=3, box.palette="auto", shadow.col="gray", nn=TRUE)
```

-   type=3: Este é um dos sete tipos principais de plots disponíveis na função rpart.plot. O type=3 é chamado de "fan", e é um plot de árvore clássico que exibe a árvore com um estilo de exibição em leque.

-   box.palette="auto": Esta opção controla as cores das caixas nos nós finais da árvore. "auto" significa que as cores serão escolhidas automaticamente.

-   shadow.col="gray": Esta opção adiciona uma sombra cinza atrás de cada caixa no plot para dar um efeito 3D.

-   nn=TRUE: Esta opção adiciona o número de observações em cada nó no plot.

Estas são apenas algumas das muitas opções disponíveis na função rpart.plot. Para mais detalhes e para explorar outras opções, você pode verificar a documentação da função rpart.plot no R.
