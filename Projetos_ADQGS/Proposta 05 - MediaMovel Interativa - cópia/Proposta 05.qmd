---
title: "Projeto Media Movel BR e ES"
author: "@BragatteMAS"
format: html
editor: visual
version: 4.2.1
---

# Projeto Media Móvel Gráfica

## 1. Raciocínio do projeto

`Maiores detalhes sobre conceitos nas aulas referenciadas com links!`

-   [Aula 58 - Comunicação de Análises de Dados](https://www.youtube.com/watch?v=i32bGVUvf6U)

1.  Qual a nossa pergunta?

> Como informar a população durante aum surto ou sobre situação de risco relativo a agravos?

2.  Quais os nossos dados? Fontes:

> Our Wolrd in Data e Ministério da Saúde do governo do Brasil, links ao final do relatório.

3.  Como estão nossos dados? Estão adequados para a nossa pergunta?

> Dados mundiais em inglês e precisam ser filtrados.
>
> Dados do Brasil precisam ser corrigidas as datas.

4.  O que vamos analisar com estes dados?

> Como fazer média móvel em diferentes cenários para melhor comunicar a situação de agravos e surtos. Transformar em gráficos interativos para aprimorar a comunicação e facilitar a consulta e tomada de decisão.

[Aula 07-2 Storytelling como auxilio ao tomador de decisão](https://www.youtube.com/watch?v=59YVfkRUbsA)

### Estruturar Relatório

-   [Aula 33 1 Documentando o aprendizado - YouTube](https://www.youtube.com/watch?v=TI122uQdIEw) base do projeto
-   [Aula 18-2-1 Como criar o seu próprio guia de funções R em PDF utilizando a biblioteca rmarkdown - YouTube](https://www.youtube.com/watch?v=K66jA9Djtr4&t=342s)
-   [Aula 53-1 Revendo o que aprendemos no R - parte 2 - YouTube](https://www.youtube.com/watch?v=hJgPPdq9pDs&t=2s)

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, collapse = TRUE, error = FALSE, warning = FALSE, message = FALSE, results = 'asis')
```

### Definir local projeto

Salvar local onde terão os arquivos para meu projeto usar

**COLOCAR O NOME DA PASTA DO SEU COMPUTADOR AQUI**

```{r}
pasta_covid <-"~/Documents/GitHub/R/Projetos_ADQGS"
```

Definir local para buscar os dados

```{r}
setwd(pasta_covid)
```

### Instalar e carregar pacotes

```{r}
pacotes <-
    c(
        "vroom", ## ler arquivos rápido e prático
        "tidytable", ## manipular dados
        "DataEditR", ## editar tabela como no excel
        "zoo", ## calcular média móvel fácil
        "esquisse", ## gerar gráficos fácil
        "plotly", # gerar gráficos interativos
        "readxl", ## ler arquivos excel
        "lubridate", ## corrigir e manipular datas
        "gridExtra" ## múltiplos gráficos juntos - facet fácil
    )
## se necessário instalar algum pacote retirar a # abaixo
#lapply(pacotes, install.packages, character.only = TRUE) 
lapply(pacotes, require, character.only = TRUE)
```

Observações para as \# ou \## dentro dos blocos de código:

`## comentário para texto = explicação`

`#comentário para código = código que pode ser rodado se tirar #`

#### Checar documentação pacote

Exemplo: Porque usar vroom para chamar pacotes ao inves do reader? *Vroom* configura os cabeçalhos automaticamente, já aplica `stringsAsFactors` por padrão e reconhece diferentes formatos sem precisar definir. Ler a documentação ajuda:

```{r}
#browseVignettes('vroom') ## descomentar se quiser ver documentação
```

# 2. Dados

## Mundo e países

```{r}
covid_mundo <- vroom("https://raw.githubusercontent.com/owid/covid-19-data/master/public/data/owid-covid-data.csv")
```

```{r}
## avaliando o dado
#str(covid_mundo)
#summary(covid_mundo)
```

## Estados e Municipíos do Brasil

```{r}
gov_br_estados <- vroom("https://raw.githubusercontent.com/wcota/covid19br/master/cases-brazil-states.csv")

gov_br_municipios <- vroom("https://raw.githubusercontent.com/wcota/covid19br/master/cases-brazil-cities.csv")
```

# 3. Analisar:

`` Estes símbolos cahamdo de pipe `%>% ou |>`, podem ser lidos como "então". ``

## Nível Brasil:

Revisando média móvel

```{r}
## qual novo nome 
covid_br <-
    ## qual arquivo original
    covid_mundo |>     
    ## quais colunas eu quero
    select.(location, date, new_cases, new_cases_smoothed ,new_deaths, new_deaths_smoothed) |>
    ## quais filtros quero aplicar
    filter.(location == "Brazil",
            between.(date, as.Date('2022-01-01'),
                    as.Date('2022-11-19'))) |>
    ## colunas de média móvel 7
    mutate.(m.movel.7_cases = round(rollmean(new_cases, k = 7, fill = NA, align = "right"))) |> 
    mutate.(m.movel.7_deaths = round(rollmean(new_deaths, k = 7, fill = NA, align = "right")))

## substituindo valores NA por 0
covid_br[is.na(covid_br)] <- 0

#covid_br
```

## Média do ano de 2022 até novembro

```{r}
## calculando  média de casos de covid primeiro em 2022
media_casos <- mean (covid_br$new_cases)

## arredondamento
round(media_casos)

## calculando média de óbitos de covid primeiro em 2022
media_obitos <- mean (covid_br$new_deaths)

## arredondamento
round(media_obitos)
```

## Estados / Municípios

```{r}
## qual novo nome 
gov_br_est <- 
    ## qual arquivo original
    gov_br_estados |> 
    ## quais colunas eu quero
    select.(country, state, epi_week, date, newCases ,newDeaths) |> 
    ## quais filtros quero aplicar
    filter.(state == "ES",
            between.(date, as.Date('2022-01-01'),
                    as.Date('2022-11-19'))) |>
    ## colunas de média móvel 7
    mutate.(m.movel.7_cases = round(rollmean(newCases, k = 7, fill = NA, align = "right"))) |> 
    mutate.(m.movel.7_deaths = round(rollmean(newDeaths, k = 7, fill = NA, align = "right")))

## substituindo valores NA por 0
gov_br_est[is.na(covid_br)] <- 0

#gov_br_est
```

# 4. Comunicar c/ gráficos

-   [Aula 38 - GGPLOT - YouTube](https://www.youtube.com/watch?v=KUyAm5LyMAs)
-   [Aula 35 - Fundamentos de visualizações - YouTube](https://www.youtube.com/watch?v=ag8EYXsi8mw)

Gerar código de gráficos com esquisser

## Casos BR

```{r}
## comentar quando for gerar relatório
#esquisser(covid_br)
```

```{r}
## dado
casos_br <- ggplot(covid_br) +
    ## mapa
    aes(x = date, y = new_cases, fill = location) +
    ## geometria
    geom_area(color = "yellow") +
    geom_line(aes(x = date, y = m.movel.7_cases , col = 'Casos Diários'), lwd = 0.4, color = "green") + 
    ## formatações
    scale_fill_manual(values = c(Brazil = "yellow")) +
    labs(x = "2022",
         y = "Média móvel casos Br",
         title = "Casos covid Br") +
    theme_classic()

casos_br 
```

## Casos ES

```{r}
## comentar quando for gerar relatório
#esquisser(gov_br_est)
```

```{r}
## dado
casos_es <- ggplot(gov_br_est) +
    ## mapa
    aes(x = date, y = newCases, fill = state) +
    ## geometria
    geom_area(color = "pink") +
    geom_line(aes(x = date, y = m.movel.7_cases , col = 'Casos Diários'), lwd = 0.4, color = "blue") +
    ## formatações
    scale_fill_hue(direction = 1) +
    labs(x = "2022",
         y = "Media Movel casos ES",
         title = "Casos de covid no ES") +
    theme_minimal()

casos_es
```

## Transformando em gráficos interativo
### Plotly
```{r}
## pacote plotly
ggplotly(casos_br)
ggplotly(casos_es)
```

## Agrupar gráficos NÃO dinâmicos

```{r}
grid.arrange(
    casos_br,
    casos_es,
    nrow=1,ncol=2)
```

## References

### Mundo e países

-   [Our World in Data](https://github.com/owid)

### Estados do Brasil

-   [COVID-19 data in Brazil: cases, deaths, and vaccination at municipal (city) level - Wesley Cota](https://github.com/wcota/covid19br)

#### Alternativas

-   [Coronavírus Brasil](https://covid.saude.gov.br/)
-   [DEMAS --- Localiza/SUS](https://www.gov.br/saude/pt-br/composicao/se/demas)
