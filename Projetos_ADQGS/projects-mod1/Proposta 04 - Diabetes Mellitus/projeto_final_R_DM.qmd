---
title: "Projeto final R - Diabetes mellitus 1 e 2"
author: "Mikael Lemos"
execute:
  echo: true
format: html
editor: visual
---

## Projeto Final

### Análise exploratória da frequência de distribuição mensal de medicamentos para indivíduos com Diabetes (tipos 1 e 2) no ano de 2022 (Jan - Set), por município no estado do Espírito Santo

Para essa análise exploratória foram utilizados dados do SIASUS (Sistemas de Informações Ambulatoriais do SUS), mais especificamente a APAC de medicamentos (Autorização para Procedimentos de Alto Custo/Complexidade) do estado do Espírito Santo no ano de 2022 entre os meses de Janeiro e Setembro. Dados e documentação acessíveis em: [Datasus - SIASUS - APAC medicamentos](https://datasus.saude.gov.br/transferencia-de-arquivos/# "Datasus - SIASUS - APAC medicamentos") .

## 1 - Instalação e carregamento das bibliotecas do R necessárias para o pRojeto

Instuções de instalação:

-   Clique na aba "Packages"

-   Clique em "Install"

-   Escreva o nome do pacote que deseja instalar no campo : "Packages (separate multiple with space or comma)"

-   Não esqueça de selecionar a opção "Install dependencies"

### Para carregar as bibliotecas:

O carregamento pode ser feito da seguinte forma:

-   Clique na aba "Packages"

-   Clique no "quadradinho" ao lado do nome da biblioteca para carregar a biblioteca R

Outra forma de carregar as bibliotecas é por meio do uso da função library(), como descrito em detalhes abaixo para cada uma das bibliotecas que utilizaremos.

#### - dplyr

```{r}

library(dplyr)

```

#### - sf

```{r}

library(sf)
```

Obs: Em caso de "Warning" , não se preocupem, isso não influenciará no resultado.

#### - stringr

```{r}

library(stringr)
```

#### - tmap

```{r}

library(tmap)
```

## 2 - Carregamento da planilha ou banco de dados de medicamentos (SIASUS - APAC medicamentos) - até Set 2022

-   Após criar uma pasta para o projeto (você pode colocar o nome que preferir, como por exemplo: "projeto_R\_DM"

-   Não use acentos ou caracteres especiais no nome, como por exemplo "%"

-   Copie para sua pasta do projeto os arquivos disponibilizados para o projeto (script quarto (projeto_final_R\_DM.qmd), arquivo .csv dos dados SIASUS (sia_am_es_2022.csv) e arquivo .shp dos dados geográficos do ES (es_mun)

-   Carregue o arquivo "sia_es_am_2022.csv" da seguinte forma:

```{r}
sia_am_es_2022 <- read.csv("sia_am_es_2022.csv", fileEncoding = "latin1")
```

## 3 - Filtro para Diabetes (tipo 1 e 2) - CID - variável AP_CIDPRI

-   É possível fazer essa filtragem para os códigos de Diabetes mellitus (tipos 1 e 2) fazendo o uso da função filter() da biblioteca dplyr.

-   Nesse projeto os CIDs de Diabetes utilizados para filtrar para o agravo DM (1 e 2) são os listados a seguir na tabela abaixo:

    Tabela 1. CIDs de Diabetes mellitus utilizados no processo de filtragem do banco de dados SIASUS - APAC medicamentos.

    | CID   | Descrição do CID                                                                   |
    |-------|------------------------------------------------------------------------------------|
    | E10.0 | Diabetes mellitus insulino-dependente - com coma                                   |
    | E10.1 | Diabetes mellitus insulino-dependente - com cetoacidose                            |
    | E10.2 | Diabetes mellitus insulino-dependente - com complicações renais                    |
    | E10.3 | Diabetes mellitus insulino-dependente - com complicações oftálmicas                |
    | E10.5 | Diabetes mellitus insulino-dependente - com complicações circulatórias periféricas |
    | E10.6 | Diabetes mellitus insulino-dependente - com outras complicações especificadas      |
    | E10.7 | Diabetes mellitus insulino-dependente - com complicações múltiplas                 |
    | E10.8 | Diabetes mellitus insulino-dependente - com complicações não especificadas         |
    | E10.9 | Diabetes mellitus insulino-dependente - sem complicações                           |
    | E11.2 | Diabetes mellitus não-insulino-dependente - com complicações renais                |
    | E11.6 | Diabetes mellitus não-insulino-dependente - com outras complicações especificadas  |
    | E11.8 | Diabetes mellitus não-insulino-dependente - com complicações não especificadas     |
    | E11.9 | Diabetes mellitus não-insulino-dependente - sem complicações                       |

    ### 3.1 - Filtro para o CIDs de Diabetes mellitus (tabela 1)

    OBS: É importante lembrar que os CID no banco de dados do SIASUS aparecem sem o ponto ou seja E10.0 é E100

    ```{r}
    sia_es_am_2022_dm <-filter(sia_am_es_2022, AP_CIDPRI == "E100" | AP_CIDPRI == "E101" | AP_CIDPRI == "E102" | AP_CIDPRI == "E103" | AP_CIDPRI == "E105" | AP_CIDPRI == "E106" | AP_CIDPRI == "E107" | AP_CIDPRI == "E108" | AP_CIDPRI == "E109" | AP_CIDPRI == "E112" | AP_CIDPRI == "E116" | AP_CIDPRI == "E118" | AP_CIDPRI == "E119")
    ```

### 3.2 - Salvar o arquivo intermediário filtrado para as CIDs de DM da tabela 1 (sia_es_am_2022_dm.csv)

```{r}
write.csv(sia_es_am_2022_dm, "sia_am_es_2022_dm.csv")
```

### 3.3 - Utilizar a função distinct() - dplyr, para obter o número de indivíduos que acessaram o SUS para obtenção de medicamentos que possuem CIDs de DM 1 e 2

```{r}
sia_es_am_2022_dm_dist <- distinct(sia_es_am_2022_dm, AP_CNSPCN , .keep_all = TRUE)
```

## 4 - Trabalhar com os arquivos shapefile para a elaborar o mapa com a frequência de pessoas (com DM 1 e 2) que acessaram o SUS em cada município do ES para obtenção de medicação

### 4.1 - Carregar arquivo shapefile (shp) do estado do ES

```{r}
es_mun <- read_sf("shp/Limite_Municipal_2018.shp")
```

### 4.2 - Criar uma tabela com as frequências de pessoas com DM por município do ES entre os meses de Jan e Set de 2022

```{r}
es_dm_jan_set_2022 <- table(sia_es_am_2022_dm_dist$AP_UFMUN)
```

-   Transformar essa lista ou vetor (es_dm_jan_set_2022) em uma tabela ou planilha

```{r}
es_dm_jan_set_2022 <- as.data.frame(es_dm_jan_set_2022)
```

### 4.4 - Unir as planilhas de frequência do número de pessoas com DM que acessaram o SUS nos municípios do ES para receber medicamentos e a tabela com dados geográficos (shapefile - shp) utilizando a função innerjoin() - dplyr.

-   Primeiro é importante exxcluir o último caracter do código de município do arquivo shapefile (es_mun) para que os códigos de municípios dos arquivos que serão unidos (es_dm_jan_set_2022 e es_mun\_ tenham o mesmo número de dígitos (6 dígitos) - função str_sub() - stringr

    ```{r}
    es_mun$cod_ibge <- str_sub(es_mun$cod_ibge, 1, 6)
    ```

-   Utilizar o mesmo nome de variável pelo qual eu quero unir as planilhas

    ```{r}

    colnames(es_dm_jan_set_2022)[1] = "cod_ibge"
    ```

<!-- -->

-   Unir as plainlhas dados geográficos (shapefile , es_mun) e tabela de frequência de pessoas com DM entre jan e set de 2022 no ES (SIASUS, es_dm_jan_Set_2022) utilizando a função innerjoin() da biblioteca dplyr

    ```{r}

    es_mun_dm_freq_2022 <- inner_join(es_mun, es_dm_jan_set_2022, by="cod_ibge")
    ```

    ## 5 - Criar o mapa com as informações de frequência de pessoas com DM entre jan - set de 2022 que receberam medicamentos no ES

    ```{r}

    plot(es_mun_dm_freq_2022["Freq"], axes = T, main = "Número de pessoas com DM que receberam medicamentos 2022" )
    ```

    ```{r}

    tm_shape(es_mun_dm_freq_2022, unit = "km") + tm_fill(col = "Freq") + tm_compass(type = "4star", position = c("right", "bottom"))
    ```
